{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User5/Desktop/Clock_B/Simple_Token_Transfer/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ContractAddress from \"@/contracts/contract-address.json\";\nimport abi from \"@/contracts/SimpleToken.json\";\n\ninterface StateType {\n  provider: ethers.BrowserProvider | null;\n  signer: any | null;\n  contract: ethers.Contract | null;\n}\n\nconst simpleTokenContractAddress = ContractAddress.SimpleToken;\nconst contractABI = abi.abi;\n// const SEPOLIA_NETWORK_ID = \"11155111\";\nconst HARDHAT_NETWORK_ID = \"31337\";\n\nexport default function Home() {\n  const [state, setState] = useState<StateType>({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [userAddress, setUserAddress] = useState<string | null>(null);\n  const [accounts, setAccounts] = useState(\"None\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [balance, setBalance] = useState(null);\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          if (ethereum.networkVersion === HARDHAT_NETWORK_ID) {\n            // if (ethereum.networkVersion === SEPOLIA_NETWORK_ID) {\n            const account = await ethereum.request({\n              method: \"eth_requestAccounts\",\n            });\n\n            const provider = new ethers.BrowserProvider(ethereum);\n            const signer = await provider.getSigner();\n            const contract = new ethers.Contract(\n              simpleTokenContractAddress,\n              contractABI,\n              signer\n            );\n            setAccounts(account);\n            setUserAddress(account[0]);\n            setState({ provider, signer, contract });\n          } else {\n            setUserAddress(\"Other Network\");\n          }\n        } else {\n          alert(\"Please install Metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n  }, []);\n\n  const handleTransfer = async () => {\n    if (!recipient || !amount)\n      return alert(\"Please enter recipient and amount\");\n    if (!userAddress) return alert(\"You cannot perform this operation\");\n    if (userAddress === \"Other Network\")\n      return alert(\"Please switch to the Sepolia Network\");\n\n    try {\n      await state.contract!.transfer(recipient, ethers.parseUnits(amount, 18));\n    } catch (error) {\n      console.error(\"Error performing transfer:\", error);\n    }\n  };\n\n  const handleGetBalance = async () => {\n    if (!userAddress) return alert(\"You cannot perform this operation\");\n    if (userAddress === \"Other Network\")\n      return alert(\"Please switch to the Sepolia Network\");\n\n    const response = await state.contract!.balances(userAddress);\n    setBalance(ethers.formatUnits(response, 18));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-r from-green-400 via-blue-500 to-purple-500 flex flex-col\">\n      <nav className=\"bg-white p-4 shadow-md flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold text-gray-800\">SimpleToken DApp</h1>\n        <img\n          src=\"/token-transfer.png\"\n          alt=\"Token Transfer\"\n          className=\"h-8 w-8\"\n        />\n      </nav>\n      <div className=\"flex-grow flex items-center justify-center\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg w-96\">\n          <h2 className=\"text-3xl font-bold mb-6 text-center text-gray-800\">\n            SimpleToken DApp\n          </h2>\n          <h3 className=\"text-sm font-semibold mb-6 text-center text-gray-600 text-black\">\n            Your Address: {accounts[0]}\n          </h3>\n          <input\n            type=\"text\"\n            className=\"w-full p-3 mb-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-600 text-black\"\n            placeholder=\"Recipient Address\"\n            value={recipient}\n            onChange={(e) => setRecipient(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            className=\"w-full p-3 mb-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-600 text-black\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n          <button\n            onClick={() => handleTransfer()}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded-lg shadow w-full hover:bg-blue-600 transition duration-300\"\n          >\n            Transfer Tokens\n          </button>\n          <button\n            onClick={() => handleGetBalance()}\n            className=\"bg-purple-500 text-white px-4 py-2 rounded-lg shadow w-full mt-4 hover:bg-purple-600 transition duration-300\"\n          >\n            Get Balance\n          </button>\n          {balance && (\n            <div className=\"text-center text-xl font-bold mt-4 text-gray-800\">\n              Balance: {balance} Tokens\n            </div>\n          )}\n        </div>\n      </div>\n      <footer className=\"bg-white p-4 shadow-md text-center\">\n        <p className=\"text-gray-600\">\n          Â© 2023 SimpleToken DApp. All rights reserved.\n        </p>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}